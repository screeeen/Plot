[{"/Users/miguelangelalvarez/Plot/src/index.js":"1","/Users/miguelangelalvarez/Plot/src/App.js":"2","/Users/miguelangelalvarez/Plot/src/reportWebVitals.js":"3","/Users/miguelangelalvarez/Plot/src/Charti.js":"4","/Users/miguelangelalvarez/Plot/src/data/winners.js":"5","/Users/miguelangelalvarez/Plot/src/Movi.js":"6","/Users/miguelangelalvarez/Plot/src/data/winnersTable.js":"7","/Users/miguelangelalvarez/Plot/src/Axis.js":"8","/Users/miguelangelalvarez/Plot/src/ChartExample.js":"9","/Users/miguelangelalvarez/Plot/src/Bar.js":"10","/Users/miguelangelalvarez/Plot/src/App.test.js":"11","/Users/miguelangelalvarez/Plot/src/WinnersBar.js":"12","/Users/miguelangelalvarez/Plot/src/setupTests.js":"13","/Users/miguelangelalvarez/Plot/src/PlacesBar.js":"14"},{"size":500,"mtime":1616050983584,"results":"15","hashOfConfig":"16"},{"size":338,"mtime":1616974153568,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1616050983585,"results":"18","hashOfConfig":"16"},{"size":2416,"mtime":1616974153569,"results":"19","hashOfConfig":"16"},{"size":10276,"mtime":1616974153569,"results":"20","hashOfConfig":"16"},{"size":4999,"mtime":1617055790314,"results":"21","hashOfConfig":"16"},{"size":12610,"mtime":1617055494403,"results":"22","hashOfConfig":"16"},{"size":815,"mtime":1616050983581,"results":"23","hashOfConfig":"16"},{"size":845,"mtime":1616050983581,"results":"24","hashOfConfig":"16"},{"size":4521,"mtime":1616050983581,"results":"25","hashOfConfig":"16"},{"size":246,"mtime":1616050983580,"results":"26","hashOfConfig":"16"},{"size":4579,"mtime":1616050983582,"results":"27","hashOfConfig":"16"},{"size":241,"mtime":1616050983585,"results":"28","hashOfConfig":"16"},{"size":4718,"mtime":1616050983581,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1sepyw7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miguelangelalvarez/Plot/src/index.js",[],["63","64"],"/Users/miguelangelalvarez/Plot/src/App.js",["65"],"import './App.css';\nimport React, { useRef } from 'react';\nimport {Charti} from './Charti'\nimport {Movi} from './Movi'\n\nfunction App() {\n  const ref = useRef();\nconst divStyle = {\n  background: 'smokewhite',\n};\n  \n\n  return (\n    <div style={divStyle} ref={ref}>\n    {/* <Charti /> */}\n    <Movi />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/miguelangelalvarez/Plot/src/reportWebVitals.js",[],"/Users/miguelangelalvarez/Plot/src/Charti.js",["66","67"],"import React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis,ZAxis, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport * as data from './data/winners'\n\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"desc\"></p>\n        <p className=\"label\">{`${payload[1].value}`}</p>\n        <p className=\"label\">{`${payload[2].payload.sport}`}</p>\n        <p className=\"label\">{`${payload[2].value}`}</p>\n        {/* <p className=\"intro\">{getIntroOfPage(label)}</p> */}\n      </div>\n    );\n  }\n  return null;\n};\n\nconst pic =()=> {\n  console.log('hello')\n  // return <img src='./data/pic'/>\n  return <p>haaay</p>\n}\n\nexport const Charti = () => {\n    return (\n      <ResponsiveContainer>\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 100,\n            right: 100,\n            bottom: 100,\n            left: 100,\n          }}\n        >\n          {/* <CartesianGrid horizontal={false}/> */}\n          <YAxis type=\"number\" dataKey=\"year\" domain={[2001,2019]}  tickCount={19} interval={0}/>\n          <XAxis type=\"number\" dataKey=\"index\" label={{value:\"sports in generral\"}} />\n          <ZAxis type=\"category\" dataKey=\"value\" interval={0}/>\n          <Tooltip content={CustomTooltip} cursor={{ strokeDasharray: '140 30' }} />\n          {/* <Legend /> */}\n          <Scatter name=\"skateMen\" data={data.skateMen} />\n          <Scatter name=\"skateFem\" data={data.skateFem} fill=\"#f00\" />\n          <Scatter name=\"miniRamp\" data={data.miniRamp} fill=\"#0f0\" />\n          <Scatter name=\"bmxParkMen\" data={data.bmxParkMen} fill=\"#00f\" />\n          <Scatter name=\"bmxParkFem\" data={data.bmxParkFem} fill=\"#8884d8\" />\n          <Scatter name=\"bmxParkFem\" data={data.bmxStreet} fill=\"#8884d8\" />\n          <Scatter name=\"bmxParkFem\" data={data.bmxFlatland} fill=\"#8884d8\" />\n          <Scatter name=\"bmxParkFem\" data={data.mtbDowntownMen} fill=\"#8884d8\" />\n          <Scatter name=\"bmxParkFem\" data={data.mtbDowntownFem} fill=\"#8884d8\" />\n          <Scatter name=\"bmxParkFem\" data={data.fmbDirtJump} fill=\"#8884d8\" />\n          <Scatter name=\"bmxParkFem\" data={data.breakDance} fill=\"#8884d8\" />\n          <Scatter name=\"bmxParkFem\" data={data.basket3x3} fill=\"#8884d8\" />\n        </ScatterChart>\n        </ResponsiveContainer>\n    );\n  }","/Users/miguelangelalvarez/Plot/src/data/winners.js",[],["68","69"],"/Users/miguelangelalvarez/Plot/src/Movi.js",["70"],"import React, {useState,useEffect} from 'react';\nimport {wins} from './data/winnersTable'\n\n\nexport const Movi = () => {\n\n    const [dataReversed] = useState(wins.reverse());\n\n    // useEffect(()=>{\n    //     const reverseData = wins.reverse();\n    //     setImmediate(reverseData);\n    // },[])\n\n    const gridStyle = {\n        height:'100vh',\n        display: 'flex',\n        alignItems: 'start',\n        justifyContent: 'center',\n        margin: '10% 0 40% 0',\n        // border: '1px solid blue'\n    }\n    \n    const columnStyle = {\n        flexFlow: 'column',\n    }\n\n    const cellStyle = {\n        display: 'flex',\n        flexFlow: 'column',\n        padding: '30% 0%',\n        fontSize: '0.8em',\n        fontWeight: 'bold',\n        color: 'gray',\n        width: '60px',\n        height: '40px',\n        // borderRight: '1px solid gray',\n        // border: '1px solid gray',\n\n    }\n    const cellYear = {\n        display: 'flex',\n        flexFlow: 'column',\n        padding: '30% 0%',\n        fontSize: '1em',\n        fontWeight: 'bold',\n        color: 'slateGray',\n        width: '60px',\n        height: '40px',\n        // borderRight: '1px solid gray',\n        // border: '1px solid blue',\n\n    }\n\n    const cellBlack = {\n        display: 'flex',\n        flexFlow: 'column',\n        padding: '30% 0%',\n        fontSize: '1.0em',\n        fontWeight: 'bold',\n        color: 'slateGray',\n        width: '60px',\n        height: '40px',\n        // border: '1px solid gray',\n    }\n\n    const imgSt = {\n        width: '130%',\n        filter: 'grayscale(100%) drop-shadow(2px 2px 1px gray)',\n    }\n    \n    const generateImage = (url) => {\n        console.log('url', url);\n        return  url && <img style={imgSt} src={process.env.PUBLIC_URL + url} alt=\"*\"/>;\n    }\n\n    const showTooltip = (info) => console.log(info)\n\n    const cell = (name,pic) => <div onMouseOver={()=>showTooltip(name)} style={cellStyle}>{generateImage(pic)}</div>\n    \n\n    const generateCells = () => {\n        console.log('reverseData',dataReversed)\n            return (\n                <>\n                <div style={columnStyle}>\n                    <div style={cellBlack}></div>\n                    {dataReversed.map((year) => <div style={cellYear}>{year.year}</div>)}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>Skateboarding</div>\n                    {dataReversed.map((year) => cell(year.skateMen,year.skateMenPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}></div>\n                    {dataReversed.map((year) => cell(year.skateWomen,year.skateWomenPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>Mini Ramp </div>\n                    {dataReversed.map((year) => cell(year.miniramp,year.miniRampPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>BMX Park</div>\n                    {dataReversed.map((year) => cell(year.bmxParkMen,year.bmxParkMenPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}></div>\n                    {dataReversed.map((year) => cell(year.bmxParkWomen,year.bmxParkWomenPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>BMX Street</div>\n                    {dataReversed.map((year) => cell(year.bmxStreet,year.bmxStreetPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>Flat Land</div>\n                    {dataReversed.map((year) => cell(year.flatland,year.flatLandPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>MTB Downtown</div>\n                    {dataReversed.map((year) => cell(year.mtbDowntownMen,year.mtbDowntownMenPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}></div>\n                    {dataReversed.map((year) => cell(year.mtbDowntownWomen,year.mtbDowntownWomenPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>FMB Dirt Jump</div>\n                    {dataReversed.map((year) => cell(year.fmbDirtJump,year.fmbDirtJumpPic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>Break Dance</div>\n                    {dataReversed.map((year) => cell(year.breakDance,year.breakDancePic))}\n                </div>\n                <div style={columnStyle}>\n                    <div style={cellBlack}>Basket 3x3</div>\n                    {dataReversed.map((year) => cell(year.basket3x3,year.basket3x3Pic))}\n                </div>\n                </>\n            )\n    }\n\n    return ( <div style={gridStyle}>\n       { generateCells()}\n       {/* {old()} */}\n        </div>)\n    \n}\n\n","/Users/miguelangelalvarez/Plot/src/data/winnersTable.js",[],"/Users/miguelangelalvarez/Plot/src/Axis.js",[],"/Users/miguelangelalvarez/Plot/src/ChartExample.js",["71","72","73","74"],"/Users/miguelangelalvarez/Plot/src/Bar.js",[],"/Users/miguelangelalvarez/Plot/src/App.test.js",[],"/Users/miguelangelalvarez/Plot/src/WinnersBar.js",["75","76"],"/Users/miguelangelalvarez/Plot/src/setupTests.js",[],"/Users/miguelangelalvarez/Plot/src/PlacesBar.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":9,"nodeType":"83","messageId":"84","endLine":3,"endColumn":15},{"ruleId":"81","severity":1,"message":"85","line":2,"column":83,"nodeType":"83","messageId":"84","endLine":2,"endColumn":89},{"ruleId":"81","severity":1,"message":"86","line":21,"column":7,"nodeType":"83","messageId":"84","endLine":21,"endColumn":10},{"ruleId":"77","replacedBy":"87"},{"ruleId":"79","replacedBy":"88"},{"ruleId":"81","severity":1,"message":"89","line":1,"column":25,"nodeType":"83","messageId":"84","endLine":1,"endColumn":34},{"ruleId":"81","severity":1,"message":"90","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":12},{"ruleId":"81","severity":1,"message":"91","line":9,"column":11,"nodeType":"83","messageId":"84","endLine":9,"endColumn":17},{"ruleId":"81","severity":1,"message":"92","line":10,"column":11,"nodeType":"83","messageId":"84","endLine":10,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":23,"column":8,"nodeType":"95","endLine":23,"endColumn":10,"suggestions":"96"},{"ruleId":"81","severity":1,"message":"91","line":4,"column":7,"nodeType":"83","messageId":"84","endLine":4,"endColumn":13},{"ruleId":"81","severity":1,"message":"97","line":9,"column":7,"nodeType":"83","messageId":"84","endLine":9,"endColumn":11},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Charti' is defined but never used.","Identifier","unusedVar","'Legend' is defined but never used.","'pic' is assigned a value but never used.",["98"],["99"],"'useEffect' is defined but never used.","'data' is defined but never used.","'colors' is assigned a value but never used.","'format' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'Rect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [data]",{"range":"103","text":"104"},[539,541],"[data]"]